version: '3.9'

services:
  app:
    image: high-load-data-provider:latest
    build:
      context: .
    container_name: app
    restart: always
    network_mode: bridge
    ports:
      - "8083:8083"
    environment:
      SPRING_R2DBC_URL: jdbc:postgresql://data-provider/data-provider
      SPRING_R2DBC_URL_USERNAME: data-provider
      SPRING_R2DBC_URL_PASSWORD: data-provider
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      - data-provider
      - redis

  data-provider:
    mem_limit: 512m
    cpus: 0.5
    platform: linux/amd64
    image: data-provider-db:latest
    command: postgres -c 'max_connections=10000'
    container_name: data-provider-postgres
    ports:
      - "5433:5432"
    environment:
      - "DEBUG=true"
      - "POSTGRES_PASSWORD=postgres"
      - "PG_TRUST_LOCALNET=true"
    healthcheck:
          test: ["CMD-SHELL", "pg_isready -U postgres && psql -lqt -U postgres | grep -qw healtcheck_db"]
          interval: 5s
          timeout: 5s
          retries: 50
    volumes:
      - ./docker-postgres/data-ms:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    restart: always
    build:
      context: ./docker/redis
    volumes:
      - ./docker/redis/conf/redis.conf:/opt/redis/redis.conf
      - ./docker/redis/data:/data
      - ./docker/redis/logs:/logs
    environment:
      - REDIS_PASSWORD=password
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    command:
      redis-server /opt/redis/redis.conf
    networks:
      - redis-network

networks:
  redis-network:
    driver: bridge